<div
  id="map"
  class="garage-map"
  style="width: 100%;
  height: 300px;"
  data-markers="<%= @markers.to_json %>"
  data-mapbox-api-key="<%= ENV['MAPBOX_API_KEY'] %>"></div>

<div class="container">

  <div class="row">

    <div class="col-12 col-md-7 col-lg-8">
      <div class="garage-show-body">
        <h2><%= @garage.name %></h2>
        <h3><%= @garage.street_number %> <%= @garage.street_address %>, <%= @garage.city %>, <%= @garage.country %></h3>
        <p><%= @garage.description %></p>
        <div class="garage-show-card spots-available">
          <i class="fas fa-warehouse"></i>
          <h4>Spots available :</h4>
          <p><%= @garage.capacity_left_regular %> regular bikes</p>
          <p><%= @garage.capacity_left_large %> large bikes</p>
        </div>
      </div>
      <div class="garage-features">
        <% @features.each do |feature| %>
          <div class="garage-feature">
            <p class="feature-icon"><%= render inline: feature.icon_image %></p>
            <p><%= feature.name.capitalize %></p>
          </div>
        <% end %>
      </div>

      <div class= "garage-show-photo">
        <%= cl_image_tag @garage.profile_image, width: 400, height: 267, crop: :fill %>
      </div>

      <div class="reviews-container">
        <h4>Reviews</h4>
        <div id="reviews">
          <% @garage.bookings.each do |booking| %>
            <% booking.reviews.each do |review| %>
              <div class="review">
                <p><%= review.content %></p>
                <div class="reviewer-and-stars">
                  <div id="review-rating">
                    <% review.rating.times do %>
                      <i class="fas fa-star review-stars"></i>
                    <% end %>
                    <% (5 - review.rating).times do %>
                      <i class="far fa-star"></i>
                    <% end %>
                  </div>
                  <div class="garage-card-avatar avatar-bordered tag-item" style="background-image: url(<%= cl_image_path review.booking.bike.user.profile_image %>);">
                  </div>
                </div>
              </div>
            <% end %>
          <% end %>
        </div>
      </div>
    </div>


    <div class="col-12 col-md-5 col-lg-4">

      <div class="garage-show-booking">

        <h3>Book a spot for your <i class="fas fa-bicycle"></i> !</h3>
        <div class="booking-form-prices">
          <div class="garage-show-card">
            <h4>Regular bike:</h4><p><%= @garage.price_regular_bike %> € /month</p>
          </div>
          <div class="garage-show-card">
            <h4>Large bike:</h4><p><%= @garage.price_large_bike %> € /month</p>
          </div>
        </div>
        <% if user_signed_in?%>
          <%= simple_form_for [current_user, @garage, @booking], html: {id: :booking_form} do |f| %>
            <% if @booking.errors.any? %>
              <div class="errors-container">
                <ul>
                  <% @booking.errors.full_messages.each do |message| %>
                    <li><%= message %></li>
                  <% end %>
                </ul>
              </div>
            <% end %>
            <%= f.input :start_date, as: :string, required: false, input_html: {class: "datepicker"}, label: "Desired start date" %>
            <% if current_user.bikes.exists? %>

              <!-- Check if the TOTAL capacity for the garage is == 0 then user cannot choose a bike-->

              <% if @garage.capacity_left_regular <= 0 && @garage.capacity_left_large <= 0 %>
                <h4>No spots left <i class="far fa-surprise"></i> Please choose another garage</h4>

              <!-- Check if the large bike capacity is == 0 then user cannot choose a large bike-->

              <% elsif @garage.capacity_left_large <= 0 %>
                <div id="array_bike_node" data-bikes="<%= current_user.bikes.where(bike_size: "regular").map{|bike|{ id: bike.id, size: bike.bike_size  } }.to_json  %>" > </div>
                <%= f.input :bike_id, collection: current_user.bikes.where(bike_size: "regular").map{|bike| [bike.name, bike.id] }, input_html: { :class => "selected-type" }, selected: 1  %>
                <div>
                  <button type="button" class="btn btn-bike" data-toggle="modal" data-target="#exampleModal">
                    Add a new bike
                  </button>
                </div>
              <!-- Check if the regular bike capacity is == 0 then user cannot choose a regular bike-->
                <button type="button" id="submit-booking" class="btn btn-booking"> Send booking request %></button>

              <% elsif @garage.capacity_left_regular <= 0%>
                <div id="array_bike_node" data-bikes="<%= current_user.bikes.where(bike_size: "cargo").map{|bike|{ id: bike.id, size: bike.bike_size  } }.to_json  %>" > </div>
                <%= f.input :bike_id, collection: current_user.bikes.where(bike_size: "cargo").map{|bike| [bike.name, bike.id] }, input_html: { :class => "selected-type" }, selected: 1  %>
                <div>
                  <button type="button" class="btn btn-bike" data-toggle="modal" data-target="#exampleModal">
                    Add a new bike
                  </button>
                </div>
                <button type="button" id="submit-booking" class="btn btn-booking"> Send booking request %></button>
              <!-- If both capacity are free user can choose any bike -->
              <% else %>
                <div id="array_bike_node" data-bikes="<%= current_user.bikes.map{|bike|{ id: bike.id, size: bike.bike_size  } }.to_json  %>" > </div>
                <%= f.input :bike_id, collection: current_user.bikes.map{|bike| [bike.name, bike.id] }, input_html: { :class => "selected-type" },selected: 1 %>
                <div>
                  <button type="button" class="btn btn-bike" data-toggle="modal" data-target="#exampleModal">
                    Add a new bike
                  </button>
                </div>
                <button type="button" id="submit-booking" class="btn btn-booking"> Send booking request %></button>
              <% end %>
              <div class="show-price bike-price"></div>
            <% else %>
              <p>Create a bike before selecting a booking:</p>
              <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">
                Create a new bike
              </button>
            <% end %>
          <% end %>
        <% else %>
          <h2>LOGIN IF YOU WANNA BOOK OR EDOUARD IS GOING TO GET MAD</h2>
        <% end %>
      </div>
      <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="exampleModalLabel">New Bike</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <% if user_signed_in?%>
              <div class="modal-body">
                <%= simple_form_for [current_user, @bike] do |f| %>
                  <%= hidden_field :garage, :garage_id, value:  @garage.id %>
                  <%= f.input :name %>
                  <%= f.input :bike_size, collection: %w(regular cargo) %>
                  <%= f.input :bike_type, collection: %w(electric non-electric) %>
                  <%= f.button :submit %>
                <% end %>
              </div>
            <% end %>
          </div>
        </div>
      </div>
    </div>
  </div>
  <%= link_to "", dashboard_home_user_path(current_user), id: "redirection-link", class: "btn_hidden" %>
</div>

<script>
  const typeSelectInput = document.querySelector('.selected-type');
  const array_bikes = JSON.parse(document.querySelector("#array_bike_node").dataset.bikes)
  console.log(typeof(array_bikes))
  typeSelectInput.addEventListener('change', e => {
    let id = Number(e.target.value)
    let bikesize = array_bikes.find((bike) => { console.log(bike) ;  return bike.id === id  }).size
    let regularBikePrice = <%= @garage.price_regular_bike.to_i %>;
    let largeBikePrice = <%= @garage.price_large_bike.to_i %>;
    let price_to_pay = ""
      if (bikesize === "cargo") {
        price_to_pay = "Your bike price/month: " + largeBikePrice + " €";
      } else if (bikesize === "regular") {
        price_to_pay = "Your bike price/month: " + regularBikePrice + " €";
      } else {
        price_to_pay = "";
      }
    document.querySelector('.bike-price').textContent = price_to_pay;
    });



  const submitBookingButton = document.querySelector('#submit-booking')

  const submitBooking = () => {
      const redirectLink = document.querySelector("#redirection-link")
      let url = `${location.pathname}/bookings`
      let tokenInput = document.querySelector('meta[name="csrf-token"]')
      let init = {
          method: "POST",
          headers: {
            'X-Requested-With': 'XMLHttpRequest',
            'X-CSRF-Token': tokenInput.content,
            'Content-Type': 'application/json',
            'Accept': 'application/json'
          },
          body: JSON.stringify({
            start_date: document.querySelector('.datepicker').value,
            bike_id: document.querySelector('.selected-type').value
          })
      }

      fetch(url, init)
          .then(response => response.json())
          .then(json => {
            if (json.message === 'booking created') {
              swal(json.message, {
              icon: "success",
              button: "Go to Dashboard"
              })
              document.querySelector(".swal-button").addEventListener("click", () =>{
                redirectLink.click()
              })
            } else {
              swal(json.message, {
              icon: "error"
              })
            }
          })
  }

  submitBookingButton.addEventListener("click", submitBooking)

</script>
